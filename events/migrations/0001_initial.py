# Generated by Django 4.2 on 2025-08-18 12:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("surveys", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("conference", "Conference"),
                            ("workshop", "Workshop"),
                            ("seminar", "Seminar"),
                            ("meetup", "Meetup"),
                            ("webinar", "Webinar"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("venue", models.CharField(blank=True, max_length=200, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("is_virtual", models.BooleanField(default=False)),
                ("virtual_meeting_url", models.URLField(blank=True, null=True)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("registration_deadline", models.DateTimeField(blank=True, null=True)),
                ("max_attendees", models.PositiveIntegerField(blank=True, null=True)),
                ("is_free", models.BooleanField(default=True)),
                (
                    "ticket_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("allow_registration", models.BooleanField(default=True)),
                ("require_approval", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                (
                    "banner_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="event_banners/"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="event_logos/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "organizer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organized_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("color", models.CharField(default="#3B82F6", max_length=7)),
                ("icon", models.CharField(blank=True, max_length=50, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Event Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EventNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("registration", "Registration"),
                            ("reminder", "Reminder"),
                            ("update", "Update"),
                            ("cancellation", "Cancellation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="events.event",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EventSurvey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_pre_event", models.BooleanField(default=False)),
                ("is_post_event", models.BooleanField(default=False)),
                ("send_reminder", models.BooleanField(default=True)),
                ("reminder_days_before", models.PositiveIntegerField(default=1)),
                ("available_from", models.DateTimeField(blank=True, null=True)),
                ("available_until", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="surveys",
                        to="events.event",
                    ),
                ),
                (
                    "survey",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="surveys.survey",
                    ),
                ),
            ],
            options={
                "unique_together": {("event", "survey")},
            },
        ),
        migrations.CreateModel(
            name="EventRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("waitlist", "Waitlist"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
                ("confirmed_date", models.DateTimeField(blank=True, null=True)),
                ("dietary_restrictions", models.TextField(blank=True, null=True)),
                ("special_requirements", models.TextField(blank=True, null=True)),
                (
                    "emergency_contact",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("payment_status", models.CharField(default="pending", max_length=20)),
                (
                    "payment_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "attendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_registrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registrations",
                        to="events.event",
                    ),
                ),
            ],
            options={
                "ordering": ["-registration_date"],
                "unique_together": {("event", "attendee")},
            },
        ),
    ]
